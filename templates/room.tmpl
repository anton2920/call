<!DOCTYPE html>
<html>
<head>
	<title>Room {{.}}</title>

	<style>
		#videos {
			display: grid;
			grid-template-columns: repeat(auto-fill, 400px);
			grid-auto-rows: 400px;
		}

		video {
			width: 100%;
			height: 100%;
			object-fit: cover;
		}
	</style>
</head>
<body>
	<h2>Room {{.}}</h2>

	<div id="checks">
		<p id="check-js">Your browser needs support for JavaScript.</p>
		<p id="check-ws" style="display: none">Your browser needs support for WebSockets.</p>
		<p id="check-rtc" style="display: none">Your browser needs support for WebRTC.</p>

		<p id="check-audio" style="display: none">Allow access to microphone so you can use it.</p>
		<p id="check-video" style="display: none">Allow access to camera so you can use it.</p>
	</div>

	<div id="videos"></div>
	<br>

	<div>
		<input type="checkbox" id="gain-check" onchange="AudioCheckHandler(GainCheck)" name="autoGainControl">
		<label for="gain-check">Automatic gain</label>

		<input type="checkbox" id="echo-check" onchange="AudioCheckHandler(EchoCheck)" name="echoCancellation">
		<label for="echo-check">Echo cancellation</label>

		<input type="checkbox" id="noise-check" onchange="AudioCheckHandler(NoiseCheck)" name="noiseSuppression">
		<label for="noise-check">Noise suppression</label>
	</div>
	<br>

	<div>
		<input type="submit" id="audio-button" onclick="AudioButtonHandler()" value="Unmute">
		<input type="submit" id="video-button" onclick="VideoButtonHandler()" value="Enable camera">
		<input type="submit" id="flip-button" style="display: none" onclick="FlipButtonHandler()" value="Flip camera">
		<input type="submit" id="screen-button" onclick="ScreenButtonHandler()" value="Show screen">
	</div>
	<br>

	<div>
		<input type="submit" id="join-button" onclick="JoinButtonHandler()" value="Join">
		<input type="submit" id="leave-button" onclick="LeaveButtonHandler()" value="Leave" disabled>
	</div>

	<script>
		"use strict";

		var ICEConfig = {
			"iceServers": [
				{"urls": "stun:124.64.206.224:8800"},
				{"urls": "stun:23.21.150.121:3478"},
				{"urls": "stun:iphone-stun.strato-iphone.de:3478"},
				{"urls": "stun:numb.viagenie.ca:3478"},
				{"urls": "stun:relay.webwormhole.io"},
				{"urls": "stun:s1.taraba.net:3478"},
				{"urls": "stun:s2.taraba.net:3478"},
				{"urls": "stun:stun.12connect.com:3478"},
				{"urls": "stun:stun.12voip.com:3478"},
				{"urls": "stun:stun.1und1.de:3478"},
				{"urls": "stun:stun.2talk.co.nz:3478"},
				{"urls": "stun:stun.2talk.com:3478"},
				{"urls": "stun:stun.3clogic.com:3478"},
				{"urls": "stun:stun.3cx.com:3478"},
				{"urls": "stun:stun.a-mm.tv:3478"},
				{"urls": "stun:stun.aa.net.uk:3478"},
				{"urls": "stun:stun.acrobits.cz:3478"},
				{"urls": "stun:stun.actionvoip.com:3478"},
				{"urls": "stun:stun.advfn.com:3478"},
				{"urls": "stun:stun.aeta-audio.com:3478"},
				{"urls": "stun:stun.aeta.com:3478"},
				{"urls": "stun:stun.alltel.com.au:3478"},
				{"urls": "stun:stun.altar.com.pl:3478"},
				{"urls": "stun:stun.annatel.net:3478"},
				{"urls": "stun:stun.antisip.com:3478"},
				{"urls": "stun:stun.arbuz.ru:3478"},
				{"urls": "stun:stun.avigora.com:3478"},
				{"urls": "stun:stun.avigora.fr:3478"},
				{"urls": "stun:stun.awa-shima.com:3478"},
				{"urls": "stun:stun.awt.be:3478"},
				{"urls": "stun:stun.b2b2c.ca:3478"},
				{"urls": "stun:stun.bahnhof.net:3478"},
				{"urls": "stun:stun.barracuda.com:3478"},
				{"urls": "stun:stun.bluesip.net:3478"},
				{"urls": "stun:stun.bmwgs.cz:3478"},
				{"urls": "stun:stun.botonakis.com:3478"},
				{"urls": "stun:stun.budgetphone.nl:3478"},
				{"urls": "stun:stun.budgetsip.com:3478"},
				{"urls": "stun:stun.cablenet-as.net:3478"},
				{"urls": "stun:stun.callromania.ro:3478"},
				{"urls": "stun:stun.callwithus.com:3478"},
				{"urls": "stun:stun.cbsys.net:3478"},
				{"urls": "stun:stun.chathelp.ru:3478"},
				{"urls": "stun:stun.cheapvoip.com:3478"},
				{"urls": "stun:stun.ciktel.com:3478"},
				{"urls": "stun:stun.cloopen.com:3478"},
				{"urls": "stun:stun.colouredlines.com.au:3478"},
				{"urls": "stun:stun.comfi.com:3478"},
				{"urls": "stun:stun.commpeak.com:3478"},
				{"urls": "stun:stun.comtube.com:3478"},
				{"urls": "stun:stun.comtube.ru:3478"},
				{"urls": "stun:stun.cope.es:3478"},
				{"urls": "stun:stun.counterpath.com:3478"},
				{"urls": "stun:stun.counterpath.net:3478"},
				{"urls": "stun:stun.cryptonit.net:3478"},
				{"urls": "stun:stun.darioflaccovio.it:3478"},
				{"urls": "stun:stun.datamanagement.it:3478"},
				{"urls": "stun:stun.dcalling.de:3478"},
				{"urls": "stun:stun.decanet.fr:3478"},
				{"urls": "stun:stun.demos.ru:3478"},
				{"urls": "stun:stun.develz.org:3478"},
				{"urls": "stun:stun.dingaling.ca:3478"},
				{"urls": "stun:stun.doublerobotics.com:3478"},
				{"urls": "stun:stun.drogon.net:3478"},
				{"urls": "stun:stun.duocom.es:3478"},
				{"urls": "stun:stun.dus.net:3478"},
				{"urls": "stun:stun.e-fon.ch:3478"},
				{"urls": "stun:stun.easybell.de:3478"},
				{"urls": "stun:stun.easycall.pl:3478"},
				{"urls": "stun:stun.easyvoip.com:3478"},
				{"urls": "stun:stun.efficace-factory.com:3478"},
				{"urls": "stun:stun.einsundeins.com:3478"},
				{"urls": "stun:stun.einsundeins.de:3478"},
				{"urls": "stun:stun.ekiga.net:3478"},
				{"urls": "stun:stun.epygi.com:3478"},
				{"urls": "stun:stun.etoilediese.fr:3478"},
				{"urls": "stun:stun.eyeball.com:3478"},
				{"urls": "stun:stun.faktortel.com.au:3478"},
				{"urls": "stun:stun.flashdance.cx:3478"},
				{"urls": "stun:stun.freecall.com:3478"},
				{"urls": "stun:stun.freeswitch.org:3478"},
				{"urls": "stun:stun.freevoipdeal.com:3478"},
				{"urls": "stun:stun.fuzemeeting.com:3478"},
				{"urls": "stun:stun.gmx.de:3478"},
				{"urls": "stun:stun.gmx.net:3478"},
				{"urls": "stun:stun.gradwell.com:3478"},
				{"urls": "stun:stun.halonet.pl:3478"},
				{"urls": "stun:stun.hellonanu.com:3478"},
				{"urls": "stun:stun.hoiio.com:3478"},
				{"urls": "stun:stun.hosteurope.de:3478"},
				{"urls": "stun:stun.ideasip.com:3478"},
				{"urls": "stun:stun.imesh.com:3478"},
				{"urls": "stun:stun.infra.net:3478"},
				{"urls": "stun:stun.internetcalls.com:3478"},
				{"urls": "stun:stun.intervoip.com:3478"},
				{"urls": "stun:stun.ipcomms.net:3478"},
				{"urls": "stun:stun.ipfire.org:3478"},
				{"urls": "stun:stun.ippi.fr:3478"},
				{"urls": "stun:stun.ipshka.com:3478"},
				{"urls": "stun:stun.iptel.org:3478"},
				{"urls": "stun:stun.irian.at:3478"},
				{"urls": "stun:stun.it1.hr:3478"},
				{"urls": "stun:stun.ivao.aero:3478"},
				{"urls": "stun:stun.jappix.com:3478"},
				{"urls": "stun:stun.jumblo.com:3478"},
				{"urls": "stun:stun.justvoip.com:3478"},
				{"urls": "stun:stun.kanet.ru:3478"},
				{"urls": "stun:stun.kiwilink.co.nz:3478"},
				{"urls": "stun:stun.kundenserver.de:3478"},
				{"urls": "stun:stun.l.google.com:19302"},
				{"urls": "stun:stun.linea7.net:3478"},
				{"urls": "stun:stun.linphone.org:3478"},
				{"urls": "stun:stun.liveo.fr:3478"},
				{"urls": "stun:stun.lowratevoip.com:3478"},
				{"urls": "stun:stun.lugosoft.com:3478"},
				{"urls": "stun:stun.lundimatin.fr:3478"},
				{"urls": "stun:stun.magnet.ie:3478"},
				{"urls": "stun:stun.manle.com:3478"},
				{"urls": "stun:stun.mgn.ru:3478"},
				{"urls": "stun:stun.mit.de:3478"},
				{"urls": "stun:stun.mitake.com.tw:3478"},
				{"urls": "stun:stun.miwifi.com:3478"},
				{"urls": "stun:stun.modulus.gr:3478"},
				{"urls": "stun:stun.mozcom.com:3478"},
				{"urls": "stun:stun.myvoiptraffic.com:3478"},
				{"urls": "stun:stun.mywatson.it:3478"},
				{"urls": "stun:stun.nas.net:3478"},
				{"urls": "stun:stun.neotel.co.za:3478"},
				{"urls": "stun:stun.netappel.com:3478"},
				{"urls": "stun:stun.netappel.fr:3478"},
				{"urls": "stun:stun.netgsm.com.tr:3478"},
				{"urls": "stun:stun.nextcloud.com:443"},
				{"urls": "stun:stun.nfon.net:3478"},
				{"urls": "stun:stun.noblogs.org:3478"},
				{"urls": "stun:stun.noc.ams-ix.net:3478"},
				{"urls": "stun:stun.node4.co.uk:3478"},
				{"urls": "stun:stun.nonoh.net:3478"},
				{"urls": "stun:stun.nottingham.ac.uk:3478"},
				{"urls": "stun:stun.nova.is:3478"},
				{"urls": "stun:stun.nventure.com:3478"},
				{"urls": "stun:stun.on.net.mk:3478"},
				{"urls": "stun:stun.ooma.com:3478"},
				{"urls": "stun:stun.ooonet.ru:3478"},
				{"urls": "stun:stun.oriontelekom.rs:3478"},
				{"urls": "stun:stun.outland-net.de:3478"},
				{"urls": "stun:stun.ozekiphone.com:3478"},
				{"urls": "stun:stun.patlive.com:3478"},
				{"urls": "stun:stun.personal-voip.de:3478"},
				{"urls": "stun:stun.petcube.com:3478"},
				{"urls": "stun:stun.phone.com:3478"},
				{"urls": "stun:stun.phoneserve.com:3478"},
				{"urls": "stun:stun.pjsip.org:3478"},
				{"urls": "stun:stun.poivy.com:3478"},
				{"urls": "stun:stun.powerpbx.org:3478"},
				{"urls": "stun:stun.powervoip.com:3478"},
				{"urls": "stun:stun.ppdi.com:3478"},
				{"urls": "stun:stun.prizee.com:3478"},
				{"urls": "stun:stun.qq.com:3478"},
				{"urls": "stun:stun.qvod.com:3478"},
				{"urls": "stun:stun.rackco.com:3478"},
				{"urls": "stun:stun.rapidnet.de:3478"},
				{"urls": "stun:stun.rb-net.com:3478"},
				{"urls": "stun:stun.refint.net:3478"},
				{"urls": "stun:stun.remote-learner.net:3478"},
				{"urls": "stun:stun.rixtelecom.se:3478"},
				{"urls": "stun:stun.rockenstein.de:3478"},
				{"urls": "stun:stun.rolmail.net:3478"},
				{"urls": "stun:stun.rounds.com:3478"},
				{"urls": "stun:stun.rynga.com:3478"},
				{"urls": "stun:stun.samsungsmartcam.com:3478"},
				{"urls": "stun:stun.schlund.de:3478"},
				{"urls": "stun:stun.services.mozilla.com:3478"},
				{"urls": "stun:stun.sigmavoip.com:3478"},
				{"urls": "stun:stun.sip.us:3478"},
				{"urls": "stun:stun.sipdiscount.com:3478"},
				{"urls": "stun:stun.siplogin.de:3478"},
				{"urls": "stun:stun.sipnet.net:3478"},
				{"urls": "stun:stun.sipnet.net:3478"},
				{"urls": "stun:stun.sipnet.ru:3478"},
				{"urls": "stun:stun.sipnet.ru:3478"},
				{"urls": "stun:stun.siportal.it:3478"},
				{"urls": "stun:stun.sippeer.dk:3478"},
				{"urls": "stun:stun.siptraffic.com:3478"},
				{"urls": "stun:stun.skylink.ru:3478"},
				{"urls": "stun:stun.sma.de:3478"},
				{"urls": "stun:stun.smartvoip.com:3478"},
				{"urls": "stun:stun.smsdiscount.com:3478"},
				{"urls": "stun:stun.snafu.de:3478"},
				{"urls": "stun:stun.softjoys.com:3478"},
				{"urls": "stun:stun.solcon.nl:3478"},
				{"urls": "stun:stun.solnet.ch:3478"},
				{"urls": "stun:stun.sonetel.com:3478"},
				{"urls": "stun:stun.sonetel.net:3478"},
				{"urls": "stun:stun.sovtest.ru:3478"},
				{"urls": "stun:stun.speedy.com.ar:3478"},
				{"urls": "stun:stun.spokn.com:3478"},
				{"urls": "stun:stun.srce.hr:3478"},
				{"urls": "stun:stun.ssl7.net:3478"},
				{"urls": "stun:stun.stunprotocol.org:3478"},
				{"urls": "stun:stun.stunprotocol.org:3478"},
				{"urls": "stun:stun.symform.com:3478"},
				{"urls": "stun:stun.symplicity.com:3478"},
				{"urls": "stun:stun.sysadminman.net:3478"},
				{"urls": "stun:stun.t-online.de:3478"},
				{"urls": "stun:stun.tagan.ru:3478"},
				{"urls": "stun:stun.tatneft.ru:3478"},
				{"urls": "stun:stun.teachercreated.com:3478"},
				{"urls": "stun:stun.tel.lu:3478"},
				{"urls": "stun:stun.telbo.com:3478"},
				{"urls": "stun:stun.telefacil.com:3478"},
				{"urls": "stun:stun.tis-dialog.ru:3478"},
				{"urls": "stun:stun.tng.de:3478"},
				{"urls": "stun:stun.twt.it:3478"},
				{"urls": "stun:stun.u-blox.com:3478"},
				{"urls": "stun:stun.ucallweconn.net:3478"},
				{"urls": "stun:stun.ucsb.edu:3478"},
				{"urls": "stun:stun.ucw.cz:3478"},
				{"urls": "stun:stun.uls.co.za:3478"},
				{"urls": "stun:stun.unseen.is:3478"},
				{"urls": "stun:stun.usfamily.net:3478"},
				{"urls": "stun:stun.veoh.com:3478"},
				{"urls": "stun:stun.vidyo.com:3478"},
				{"urls": "stun:stun.vipgroup.net:3478"},
				{"urls": "stun:stun.virtual-call.com:3478"},
				{"urls": "stun:stun.viva.gr:3478"},
				{"urls": "stun:stun.vivox.com:3478"},
				{"urls": "stun:stun.vline.com:3478"},
				{"urls": "stun:stun.vo.lu:3478"},
				{"urls": "stun:stun.vodafone.ro:3478"},
				{"urls": "stun:stun.voicetrading.com:3478"},
				{"urls": "stun:stun.voip.aebc.com:3478"},
				{"urls": "stun:stun.voip.blackberry.com:3478"},
				{"urls": "stun:stun.voip.eutelia.it:3478"},
				{"urls": "stun:stun.voiparound.com:3478"},
				{"urls": "stun:stun.voipblast.com:3478"},
				{"urls": "stun:stun.voipbuster.com:3478"},
				{"urls": "stun:stun.voipbusterpro.com:3478"},
				{"urls": "stun:stun.voipcheap.co.uk:3478"},
				{"urls": "stun:stun.voipcheap.com:3478"},
				{"urls": "stun:stun.voipfibre.com:3478"},
				{"urls": "stun:stun.voipgain.com:3478"},
				{"urls": "stun:stun.voipgate.com:3478"},
				{"urls": "stun:stun.voipinfocenter.com:3478"},
				{"urls": "stun:stun.voipplanet.nl:3478"},
				{"urls": "stun:stun.voippro.com:3478"},
				{"urls": "stun:stun.voipraider.com:3478"},
				{"urls": "stun:stun.voipstunt.com:3478"},
				{"urls": "stun:stun.voipwise.com:3478"},
				{"urls": "stun:stun.voipzoom.com:3478"},
				{"urls": "stun:stun.vopium.com:3478"},
				{"urls": "stun:stun.voxgratia.org:3478"},
				{"urls": "stun:stun.voxox.com:3478"},
				{"urls": "stun:stun.voys.nl:3478"},
				{"urls": "stun:stun.voztele.com:3478"},
				{"urls": "stun:stun.vyke.com:3478"},
				{"urls": "stun:stun.webcalldirect.com:3478"},
				{"urls": "stun:stun.whoi.edu:3478"},
				{"urls": "stun:stun.wifirst.net:3478"},
				{"urls": "stun:stun.wwdl.net:3478"},
				{"urls": "stun:stun.xs4all.nl:3478"},
				{"urls": "stun:stun.xtratelecom.es:3478"},
				{"urls": "stun:stun.yesss.at:3478"},
				{"urls": "stun:stun.zadarma.com:3478"},
				{"urls": "stun:stun.zadv.com:3478"},
				{"urls": "stun:stun.zoiper.com:3478"},
				{"urls": "stun:stun1.faktortel.com.au:3478"},
				{"urls": "stun:stun1.l.google.com:19302"},
				{"urls": "stun:stun1.voiceeclipse.net:3478"},
				{"urls": "stun:stun2.l.google.com:19302"},
				{"urls": "stun:stun3.l.google.com:19302"},
				{"urls": "stun:stun4.l.google.com:19302"},
				{"urls": "stun:stunserver.org:3478"},
			]
		};

		var Check = document.getElementById("check-js");
		Check.style.display = "none";

		var CheckWS = document.getElementById("check-ws");
		var CheckRTC = document.getElementById("check-rtc");
		var CheckAudio = document.getElementById("check-audio");
		var CheckVideo = document.getElementById("check-video");

		var Videos = document.getElementById("videos");
		function AddVideo(stream, muted) {
			var video = document.createElement("video");
			video.srcObject = stream;
			video.muted = muted;
			video.onloadedmetadata = function() {
				video.play();
			};
			Videos.append(video);

			return video;
		}

		function SendICECandidate(token, ice) {
			var message = {
				"Type": "ICE",
				"ICE": ice,
				"Token": token
			};
			WS.send(JSON.stringify(message));
		}

		function SendICECandidates(token) {
			if (Peers[token].ICE.length) {
				for (var i = 0; i < Peers[token].ICE.length; ++i) {
					SendICECandidate(token, Peers[token].ICE[i]);
				}
				Peers[token].ICE.length = 0;
			}
		}

		function AddTrack(stream, track) {
			stream.addTrack(track);
			track.onended = function() {
				RemoveTrack(stream, track);
			}

			for (var token in Peers) {
				var rtc = Peers[token].RTC;
				rtc.addTrack(track, stream);
			}
		}

		function AddTracks(stream, tracks) {
			for (var i = 0; i < tracks.length; ++i) {
				AddTrack(stream, tracks[i]);
			}
		}

		function RemoveTrack(stream, track) {
			stream.removeTrack(track);
			track.enabled = false;
			track.stop();

			for (var token in Peers) {
				var rtc = Peers[token].RTC;
				var senders = rtc.getSenders();

				for (var i = 0; i < senders.length; ++i) {
					if (senders[i].track == track) {
						rtc.removeTrack(senders[i]);
						break;
					}
				}
			}
		}

		function RemoveTracks(stream, tracks) {
			for (var i = 0; i < tracks.length; ++i) {
				RemoveTrack(stream, tracks[i]);
			}
		}

		function AddPeer(token, polite) {
			try {
				var rtc = new RTCPeerConnection(ICEConfig);
			} catch (e) {
				CheckRTC.style.display = "";
				WS.close();
				WS = undefined;
				return;
			}
			var peer = {
				"ICE": [],
				"RTC": rtc,
				"Videos": {},
				"Polite": polite,
				"SendingOffer": false,
			};
			var ice = peer.ICE;

			rtc.ontrack = function(event) {
				if ((event.streams) && (event.streams[0])) {
					var id = event.streams[0].id;
					if (!peer.Videos[id]) {
						peer.Videos[id] = AddVideo(event.streams[0], false);
						var interval = setInterval(function() {
							var peer = Peers[token];
							if (peer) {
								var video = peer.Videos[id];
								if (video) {
									if (video.srcObject.getTracks().length) {
										return;
									}
									video.remove();
									delete peer.Videos[id];
								}
							}

							clearInterval(interval);
						}, 1000);
					}
				}
			};

			rtc.onicecandidate = function(event) {
				if (event.candidate) {
					if (rtc.remoteDescription) {
						SendICECandidate(token, event.candidate);
					} else {
						ice.push(event.candidate);
					}
				}
			};

			rtc.onnegotiationneeded = function(event) {
				peer.SendingOffer = true;

				rtc.createOffer().then(function(offer) {
					rtc.setLocalDescription(offer).then(function() {
						var message = {
							"Type": "Offer",
							"Offer": offer,
							"Token": token
						};
						WS.send(JSON.stringify(message));

						peer.SendingOffer = false;
					});
				});
			};

			var tracks = AudioVideoStream.getTracks();
			for (var i = 0; i < tracks.length; ++i) {
				rtc.addTrack(tracks[i], AudioVideoStream);
			}

			tracks = ScreenStream.getTracks();
			for (var i = 0; i < tracks.length; ++i) {
				rtc.addTrack(tracks[i], ScreenStream);
			}

			Peers[token] = peer;
			return peer;
		}

		function RemovePeer(token) {
			Peers[token].RTC.close();
			for (var video in Peers[token].Videos) {
				Peers[token].Videos[video].remove();
			}
			delete Peers[token];
		}

		function RemovePeers() {
			for (var token in Peers) {
				RemovePeer(token);
			}
			Peers = {};
		}

		function SetOfferSendAnswer(token, offer) {
			var rtc = Peers[token].RTC;

			rtc.setRemoteDescription(offer).then(function() {
				rtc.createAnswer().then(function(answer) {
					rtc.setLocalDescription(answer).then(function() {
						var message = {
							"Type": "Answer",
							"Answer": answer,
							"Token": token
						};
						WS.send(JSON.stringify(message));

						SendICECandidates(token);
					});
				});
			});
		}

		var WS = undefined;
		var Peers = {};
		var JoinButton = document.getElementById("join-button");
		function JoinButtonHandler() {
			JoinButton.disabled = true;

			try {
				WS = new WebSocket("wss://" + location.host + "/ws" + location.pathname);
			} catch (e) {
				CheckWS.style.display = "";
				return;
			}

			WS.onclose = function(event) {
				console.log(event);
				RemovePeers();
				LeaveButton.disabled = true;
			};

			WS.onmessage = function(msg) {
				var message = JSON.parse(msg.data);

				var token = message["Token"];
				var t = message["Type"];

				switch (t) {
				case "Answer":
					Peers[token].RTC.setRemoteDescription(new RTCSessionDescription(message["Answer"])).then(function() {
						SendICECandidates(token);
					});
					break;
				case "ICE":
					Peers[token].RTC.addIceCandidate(message["ICE"]).catch(function() {});
					break;
				case "Leave":
					RemovePeer(token);
					break;
				case "NeedOffer":
					AddPeer(token, false);
					break;
				case "Offer":
					var peer = Peers[token]
					if (!peer) {
						peer = AddPeer(token, true);
					}

					var rtc = peer.RTC;
					if ((peer.SendingOffer) || (rtc.localDesription)) {
						if (!peer.Polite) {
							return;
						}

						rtc.setLocalDescription(new RTCSessionDescription({type: "rollback"})).then(function() {
							SetOfferSendAnswer(token, new RTCSessionDescription(message["Offer"]));
						});
						return;
					}

					SetOfferSendAnswer(token, new RTCSessionDescription(message["Offer"]));
					break;
				default:
					throw new Error("Unrecognized message type!");
				}
			};

			WS.onopen = function(event) {
				var interval = setInterval(function() {
					if (!WS) {
						clearInterval(interval);
						return;
					}

					var message = {
						"Type": "Ping"
					};
					WS.send(JSON.stringify(message));
				}, 5000);
				LeaveButton.disabled = false;
			};
		}

		var LeaveButton = document.getElementById("leave-button");
		function LeaveButtonHandler() {
			LeaveButton.disabled = true;
			WS.close();
			WS = undefined;
			JoinButton.disabled = false;
		}

		var AudioVideoStream = new MediaStream();
		function GetAudioTracks() {
			return navigator.mediaDevices.getUserMedia({audio: true}).then(function(stream) {
				return stream.getAudioTracks();
			});
		}

		var GainCheck = document.getElementById("gain-check");
		var EchoCheck = document.getElementById("echo-check");
		var NoiseCheck = document.getElementById("noise-check");
		function AudioCheckHandler(check) {
			var tracks = AudioVideoStream.getAudioTracks();
			for (var i = 0; i < tracks.length; ++i) {
				var track = tracks[i];
				var settings = track.getSettings();

				var old = settings[check.name];
				if (old == undefined) {
					/* NOTE(anton2920): in Firefox 52 some properties are named as '"moz" + strings.Title(check.name)'. */

					var newName = "moz" + check.name.charAt(0).toUpperCase() + check.name.substr(1);
					old = settings[newName];
					if (old == undefined) {
						check.checked = false;
						check.disabled = true;
						return;
					}
					check.name = newName;
				}

				settings[check.name] = check.checked;
				track.applyConstraints(settings).catch(function(err) {
					check.checked = old;
					check.disabled = true;
				});

			}
		}

		function ToggleTracks(tracks, button, enabledString, disabledString) {
			for (var i = 0; i < tracks.length; ++i) {
				var track = tracks[i];
				track.enabled = !track.enabled;
			}
			return track.enabled;
		}

		var AudioButton = document.getElementById("audio-button");
		function AudioButtonHandler() {
			var tracks = AudioVideoStream.getAudioTracks();
			if (!tracks.length) {
				GetAudioTracks().then(function(tracks) {
					AddTracks(AudioVideoStream, tracks);

					AudioCheckHandler(GainCheck);
					AudioCheckHandler(EchoCheck);
					AudioCheckHandler(NoiseCheck);

					AudioButton.value = "Mute";
					CheckAudio.style.display = "none";

					var interval = setInterval(function() {
						if (AudioVideoStream.getTracks().length) {
							return;
						}
						AudioButton.value = "Unmute";
						clearInterval(interval);
					}, 200);
				}).catch(function(err) {
					switch (err.name) {
					case "NotAllowedError":
						CheckAudio.style.display = "";
						break;
					default:
						console.error(err);
						break;
					}
				});
				return;
			}

			AudioButton.value = (ToggleTracks(tracks)) ? "Mute" : "Unmute";
		}

		function GetVideoTracks() {
			return navigator.mediaDevices.getUserMedia({video: true}).then(function(stream) {
				return stream.getVideoTracks();
			});
		}

		var FlipButton = document.getElementById("flip-button");
		function FlipButtonHandler() {
			var tracks = AudioVideoStream.getVideoTracks();
			for (var i = 0; i < tracks.length; ++i) {
				var track = tracks[i];
				var settings = track.getSettings();

				var old = settings.flipMode;
				if (old == undefined) {
					return;
				}

				var n = "";
				switch (old) {
				case "user":
					n = "environment";
					break;
				case "environment":
					n = "user";
					break;
				default:
					return;
				}

				settings.flipMode = n;
				track.applyConstraints(settings);
			}
		}

		var VideoButton = document.getElementById("video-button");
		var VideoElement = undefined;
		function VideoButtonHandler() {
			var tracks = AudioVideoStream.getVideoTracks();
			if (!tracks.length) {
				GetVideoTracks().then(function(tracks) {
					AddTracks(AudioVideoStream, tracks);
					VideoButton.value = "Disable camera";
					CheckVideo.style.display = "none";

					var canFlip = false;
					for (var i = 0; i < tracks.length; ++i) {
						var settings = tracks[i].getSettings();
						canFlip = canFlip || (settings.flipMode != undefined);
					}
					if (canFlip) {
						FlipButton.style.display = "";
					}

					if (VideoElement == undefined) {
						VideoElement = AddVideo(AudioVideoStream, true);
						var interval = setInterval(function() {
							if (VideoElement) {
								if (VideoElement.srcObject.getTracks().length) {
									return;
								}
								VideoElement.remove();
								VideoElement = undefined;
								VideoButton.value = "Enable camera";
							}
							clearInterval(interval);
						}, 200);
					}
				}).catch(function(err) {
					switch (err.name) {
					case "NotAllowedError":
						CheckVideo.style.display = "";
						break;
					default:
						console.error(err);
						break;
					}
				});
				return;
			}

			VideoButton.value = (ToggleTracks(tracks)) ? "Disable camera" : "Enable camera";
		}

		var ScreenStream = new MediaStream();
		function GetScreenTracks() {
			var options = {
				video: true,
				audio: {
					suppressLocalAudioPlayback: false
				},
				systemAudio: "include"
			};
			return navigator.mediaDevices.getDisplayMedia(options).then(function(stream) {
				return stream.getTracks();
			});
		}

		var ScreenButton = document.getElementById("screen-button");
		function ScreenButtonHandler() {
			if (!ScreenStream.getTracks().length) {
				GetScreenTracks().then(function(tracks) {
					AddTracks(ScreenStream, tracks);
					ScreenButton.value = "Stop sharing";

					var video = AddVideo(ScreenStream, true);
					var interval = setInterval(function() {
						if (video) {
							if (video.srcObject.getTracks().length) {
								return;
							}
							video.remove();
							ScreenButton.value = "Share screen";
						}
						clearInterval(interval);
					}, 200);
				});
				return;
			}

			RemoveTracks(ScreenStream, ScreenStream.getTracks());
		}

		function main() {
			GainCheck.checked = true;
			GainCheck.disabled = false;

			EchoCheck.checked = false;
			EchoCheck.disabled = false;

			NoiseCheck.checked = false;
			NoiseCheck.disabled = false;

			ScreenButton.style.display = (navigator.mediaDevices.getDisplayMedia == undefined) ? "none" : "";

			AudioButtonHandler();
			VideoButtonHandler();

			JoinButton.disabled = false;
			LeaveButton.disabled = true;
		}

		window.onload = main;
	</script>
</body>
</html>
